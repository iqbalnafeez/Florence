@model Florence.AdminDepartment

@{
    ViewBag.Title = "Details";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Details <small>With all properties</small></h5>
                </div>
                <div class="ibox-content">
                    <form method="get" class="form-horizontal">
                        @foreach (var property in Model.GetType().GetProperties().Where(x => !new string[] { "id", "DepartmentSID","CreatedBy" }.Contains(x.Name)))
                        {
                            <div class="form-group">
                                @Html.Label(property.Name, new { @class = "col-lg-2 control-label" })
                                @{
                                    if (property.Name.Equals("id"))
                                    {
                                        <div class="col-lg-10"><p class="form-control-static">@Model.id</p></div>
                                    }
                                    else
                                    {
                                        <div class="col-lg-10"><p class="form-control-static">@Html.Display(property.Name)</p></div>
                                    }

                                }

                            </div>
                            <div class="hr-line-dashed"></div>

                                    }

                    </form>
                </div>
            </div>
        </div>
    </div>
    <div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
</div>

    


    <div>
        <h4>AdminDepartment</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ParentID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ParentID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DeptCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DeptCode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Responsibility)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Responsibility)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Tel)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Tel)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Fax)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Fax)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Email)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Email)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Addr)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Addr)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PostCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PostCode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BankName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BankName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BankAccount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BankAccount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.UserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AbsIndex)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AbsIndex)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ItemLevel)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ItemLevel)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsActive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsActive)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsDir)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsDir)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Memo)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Memo)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
