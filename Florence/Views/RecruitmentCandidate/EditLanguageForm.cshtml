@model Florence.CandidateLanguage

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CandidateLanguage</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        
        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListeningLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ListeningLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListeningLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpeakingLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpeakingLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpeakingLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReadingLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReadingLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReadingLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WritingLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WritingLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WritingLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnEditLanguageForm" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {

        $("#btnEditLanguageForm").click(function (e) {
            var obj = {
                LinkID: $("#LinkID").val(),
                Language: $("#Language").val(),
                ListeningLevel: $("#ListeningLevel").val(),
                SpeakingLevel: $("#SpeakingLevel").val(),
                ReadingLevel: $("#ReadingLevel").val(),
                WritingLevel: $("#WritingLevel").val()

            }

            _languageArr.push(obj);
            if (_languageArr.length == 1) {
                generateLanguageGrid();
            } else {
                //reloadWorkExpGrid();
                reloadGridData("languageGrid", _languageArr)
            }

            $("#" + _addLanguage).data("kendoWindow").close();
        });

    });


</script>