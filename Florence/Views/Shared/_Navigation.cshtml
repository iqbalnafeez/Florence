@{
    var usr = SessionItems.CurrentUser;
    var roles = SessionItems.UserRoles.Select(x => x.RoleId.RoleId);
    

}
<nav class="navbar-default navbar-static-side" role="navigation">
    <div class="sidebar-collapse">
        <ul class="nav" id="side-menu">
            <li class="nav-header">
                <div class="dropdown profile-element">
                    <span>
                        @*<img alt="image" class="img-circle" src="~/Images/profile_small.jpg" />*@
                    </span>
                    <a data-toggle="dropdown" class="dropdown-toggle" href="#">
                        <span class="clear">
                            <span class="block m-t-xs">
                                <strong class="font-bold">@string.Format("{0} {1}", usr.FirstName, usr.LastName)</strong>
                            </span> <span class="text-muted text-xs block">Art Director <b class="caret"></b></span>
                        </span>
                    </a>
                    <ul class="dropdown-menu animated fadeInRight m-t-xs">
                        
                        <li class="divider"></li>
                        <li><a href="@Url.Action("LogOff", "Account")">Logout</a></li>
                    </ul>
                </div>
                <div class="logo-element">
                    HRMS
                </div>
            </li>
            <li class="@Html.IsSelected(controller: "Dashboards")">
                <a href="@Url.Action("Dashboard_1", "Dashboards")"><i class="fa fa-th-large"></i> <span class="nav-label">Dashboards</span> <span class="fa arrow"></span></a>
                <ul class="nav nav-second-level collapse">
                    <li class="@Html.IsSelected(action: "EmploymentDashboard")"><a href="@Url.Action("EmploymentDashboard", "Dashboards")">Employment</a></li>
                    @*<li class="@Html.IsSelected(action: "Dashboard_2")"><a href="@Url.Action("Dashboard_2", "Dashboards")">Dashboard v.2</a></li>
                    <li class="@Html.IsSelected(action: "Dashboard_3")"><a href="@Url.Action("Dashboard_3", "Dashboards")">Dashboard v.3</a></li>
                    <li class="@Html.IsSelected(action: "Dashboard_4_1")"><a href="@Url.Action("Dashboard_4_1", "Dashboards")">Dashboard v.4</a></li>
                    <li class="@Html.IsSelected(action: "Dashboard_5")"><a href="@Url.Action("Dashboard_5", "Dashboards")">Dashboard v.5</a></li>*@
                </ul>
            </li>
            
            @{
                var menuItems = SessionItems.MenuItems;
                var groupItems = SessionItems.MenuItemsGroup;
                var parents = menuItems.Select(x => x.ParentID).Distinct().OrderBy(y => y).ToList();
                foreach (int parentID in parents)
                {
                    var subMenuItems = menuItems.Where(x => x.ParentID == parentID).ToList();
                    var groupItem = groupItems.Where(x => x.id == parentID).FirstOrDefault();
                    <li class="@Html.IsGroupSelected(parentID: parentID)">
                        <a href="#"><i class="@groupItem.Icon"></i> <span class="nav-label">@groupItem.Name </span><span class="fa arrow"></span></a>
                        <ul class="nav nav-second-level">

                            
                            @{
                                foreach (MenuItems item in subMenuItems.OrderBy(x => x.Description))
                                {
                                    if (roles.Contains(item.TaskID))
                                    {
                                    <text>
                                        <li class="@Html.IsSelected(controller: @item.Controller)">
                                            <a href="@Url.Action(item.Action, item.Controller)">@item.Description</a>
                                        </li>
                                    </text>
                                    }
                                }

                            }

                        </ul>
                    </li>



                    
                }
            }
        </ul>
    </div>
</nav>

<script>
    $(document).ready(function () {
        $("body").toggleClass("mini-navbar");
        SmoothlyMenu();
    })
</script>