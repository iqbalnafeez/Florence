
@model IEnumerable<Florence.TaxRule>
@{
    var defaultTaxRuleRowCount = 7;
}

<div class="wrapper-content">
    <div class="row show-grid">
        <input class="txt-string" name="RuleName" value="" placeholder="Tax Rule Title"/>
    </div>


    <div class="row show-grid">

        <div class="col-md-2">
            Salary From
        </div>
        <div class="col-md-2">
            Salary To
        </div>
        <div class="col-md-2">
            Tax Percentage
        </div>
        <div class="col-md-2">
            Exempted Tax Amount
        </div>
        <div class="col-md-2">
            Additional Tax Amount
        </div>
    </div>

    @{
        
        

        if (Model.Count() < defaultTaxRuleRowCount)
        {
            for (int i = 0; i < defaultTaxRuleRowCount - Model.Count(); i++)
            {
                <div class="row show-grid TaxRuleDetail">
                    <div class="col-md-2">
                        <input class="txt-currency" name="SalaryFrom" value="" />
                    </div>
                    <div class="col-md-2">
                        <input class="txt-currency" name="SalaryTo" value="" />
                    </div>
                    <div class="col-md-2">
                        <input class="txt-persentage" name="TaxPercentage" value="" />
                    </div>
                    <div class="col-md-2">
                        <input class="txt-currency" name="ExemptedTaxAmount" value="" />
                    </div>
                    <div class="col-md-2">
                        <input class="txt-currency" name="AdditionalTaxAmount" value="" />
                    </div>
                </div>
            }
        }
        <div class="row">
            <button id="btnNewTaxRule" type="button" class="btn btn-success btn-outline">Save</button>

        </div>
    }

</div>



<script>
    $(document).ready(function () {
        $("#btnNewTaxRule").click(function () {
            createTaxRule();
        });

        //format text
        $(".txt-string").kendoMaskedTextBox({

        });
        //format currency
        $(".txt-currency").kendoNumericTextBox({
            format: "c",
            decimals: 3
        });

        //format persentage
        $(".txt-persentage").kendoNumericTextBox({
            format: "p0",
            min: 0,
            max: 1,
            step: 0.01
        });
    });

    function createTaxRule() {
        var objs = new Array();
        var linkID = Math.uuid();
        $(".TaxRuleDetail").each(function (i, e) {
            var obj = {
                RuleName: $("[name=RuleName]").val(),
                TaxFormat: "General",
                SalaryFrom: $(e).find("[name=SalaryFrom]").val(),
                SalaryTo: $(e).find("[name=SalaryTo]").val(),
                TaxPercentage: $(e).find("[name=TaxPercentage]").val(),
                ExemptedTaxAmount: $(e).find("[name=ExemptedTaxAmount]").val(),
                AdditionalTaxAmount: $(e).find("[name=AdditionalTaxAmount]").val(),
                LinkID: linkID
            };
            objs.push(obj);
        });

        objs = Enumerable.From(objs).Where(function (x) { return x.TaxPercentage > 0 || x.ExemptedTaxAmount > 0 || x.AdditionalTaxAmount > 0 }).ToArray();

        $.ajax({
            type: "POST",
            url: '/TaxRule/Create',
            data: {objs:objs},
            success: function (data) {
                console.log(data);
                toastr.success("Tax Rule Save successfully!", "Notification!");
                $("#payrollStructure-4").load('@(Url.Action("Index", "TaxRule", null, Request.Url.Scheme))');
            }
        });
    }
</script>

<style>
    
</style>
