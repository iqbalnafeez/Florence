@model Florence.JobInterview

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>JobInterview</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.JobPost, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    
                    @(Html.Kendo().DropDownListFor(x => x.JobPost)
          .Name("JobPost")
          .BindTo(new SelectList(new JobPost().GetStringListFromExpression(x => x.JobTitle != null, x=> x.JobTitle)))
          .HtmlAttributes(new { style = "width: 100%" })
                    )

                    @Html.ValidationMessageFor(model => model.JobPost, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @(Html.Kendo().DatePickerFor(x => x.InterviewDate)
              .Name("InterviewDate")
              .Value(DateTime.Today)
              .HtmlAttributes(new { style = "width: 100%" })
                    )
                    @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Interviewer1, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Interviewer1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interviewer1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Interviewer2, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Interviewer2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interviewer2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Interviewee1, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Interviewee1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interviewee1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Interviewee2, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Interviewee2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interviewee2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PlaceOfInterview, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.PlaceOfInterview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlaceOfInterview, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">

            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                
                    @Html.LabelFor(model => model.InterviewDesc, htmlAttributes: new { @class = "control-label " })

                    @(Html.Kendo().EditorFor(x => x.InterviewDesc)
          .Name("InterviewDesc")
          .HtmlAttributes(new { style = "height:440px" })
          .Resizable(resizable => resizable.Content(true).Toolbar(true))
          .Value(HttpUtility.HtmlDecode( Model.InterviewDesc))
                    )
               
            </div>
            
        </div>

        

        <div class="form-group">
            <div class="">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        genericInit();


    });
</script>
