@model Florence.PayrollOption


<div class="ibox-content">
    @using (Html.BeginForm("SavePayrollOption","PayrollOption", FormMethod.Post, new {id = "PayrollOptionForm"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            
          
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.PayrollMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.PayrollMethod, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.PayrollMethodTypes, false)), new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.PayrollMethod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.AutoApprovePayroll, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.AutoApprovePayroll, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.AutoApprovePayrollTypes, false)), new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.AutoApprovePayroll, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.PayrollApprovedBy, new SelectList(Employee.GetAll(), "id", "FullName"), new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.PayrollApprovedBy, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.AutoEmailPayslips, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AutoEmailPayslips)
                        @Html.ValidationMessageFor(model => model.AutoEmailPayslips, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.PerDaySalaryCalculation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.PerDaySalaryCalculation, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.PerDaySalaryCalculationTypes)), new { htmlAttributes = new { @class = "", style = "width:400px;" } })
                    @Html.ValidationMessageFor(model => model.PerDaySalaryCalculation, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-1">
                    @Html.EditorFor(model => model.NumberOfDayInMonth, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.NumberOfDayInMonth, "", new { @class = "text-danger" })
                </div>
            </div>

            

            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.PayslipTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PayslipTitle, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.PayslipTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.PayslipFormat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.PayslipFormat, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.PayslipFormatTypes,false)), new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.PayslipFormat, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.BasicSalaryType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.BasicSalaryType, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.BasicSalaryTypes)), new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.BasicSalaryType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                @Html.LabelFor(model => model.BasicSalaryPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.BasicSalaryPercentage, new { htmlAttributes = new { @class = "" } })
                    @Html.ValidationMessageFor(model => model.BasicSalaryPercentage, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="hr-line-dashed"></div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="button" id="btnSavePayrollOptionForm" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

</div>

    <script>
        $(document).ready(function () {
            genericInit();

            $("#btnSavePayrollOptionForm").click(function () {

                var url = $("#PayrollOptionForm").attr('action');

                $.ajax({
                    type: "POST",
                    url: url,
                    data: $("#PayrollOptionForm").serialize(),
                    success: function (data) {
                        console.log(data);
                        if (data.BooleanResult) {
                            $("#PayrollOptionForm").find("#id").val(data.ObjectResult.id);
                            toastr.success('Payroll Options Save Success!', 'Notification');
                        }
                    }
                });

                return false; // avoid to execute the actual submit of the form.
            });
        });
    </script>

    <style>
        #PayrollOptionForm .k-dropdown .k-dropdown-wrap {
            width: 400px;
        }

        .k-list-container{
            min-width:400px !important;
            width: auto!important;
        }
        .k-list
        {
            width:auto !important;
        }
    </style> 