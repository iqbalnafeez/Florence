
@model Florence.Salary

<div class="ibox-content">

    @using (Html.BeginForm("Edit", "Salary", FormMethod.Post, new { id = "SaveEmployeeSalaryForm" }))
    {

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Salary</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            @Html.HiddenFor(model => model.Employee)


            <div class="form-group">
                @Html.LabelFor(model => model.SalaryType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SalaryType, new SelectList(ModelTypes.GetTypes(ModelTypesKeys.SalaryTypes)), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalaryType, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.TaxRule, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TaxRule, new SelectList(TaxRule.TaxRuleList()), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxRule, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OvertimeRate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-integer" id="OvertimeRate" name="OvertimeRate" value="@Model.OvertimeRate" />
                    @*@Html.EditorFor(model => model.OvertimeRate, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.OvertimeRate, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AnnualGrossSalary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="AnnualGrossSalary" name="AnnualGrossSalary" value="@Model.AnnualGrossSalary" />
                    @*@Html.EditorFor(model => model.AnnualGrossSalary, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.AnnualGrossSalary, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MonthlyBasicSalary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="MonthlyBasicSalary" name="MonthlyBasicSalary" value="@Model.MonthlyBasicSalary" />
                    @*@Html.EditorFor(model => model.MonthlyBasicSalary, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.MonthlyBasicSalary, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AllowanceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="AllowanceID" name="AllowanceID" value="@Model.AllowanceID" />
                    @*@Html.EditorFor(model => model.AllowanceID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AllowanceID, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Claims, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="Claims" name="Claims"  value="@Model.Claims" />
                    @*@Html.EditorFor(model => model.Claims, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.Claims, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Commissions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="Commissions" name="Commissions" value="@Model.Commissions" />
                    @*@Html.EditorFor(model => model.Commissions, new { htmlAttributes = new { @class = "txt-currency" } })
                        @Html.ValidationMessageFor(model => model.Commissions, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Deductions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="Deductions" name="Deductions" value="@Model.Deductions" />
                    @*@Html.EditorFor(model => model.Deductions, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.Deductions, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxDeductionAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-currency" id="TaxDeductionAmount" name="TaxDeductionAmount" value="@Model.TaxDeductionAmount" />
                    @*@Html.EditorFor(model => model.TaxDeductionAmount, new { htmlAttributes = new { @class = "form-control txt-currency" } })
                        @Html.ValidationMessageFor(model => model.TaxDeductionAmount, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxDeductionPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="txt-persentage" id="TaxDeductionPercentage" name="TaxDeductionPercentage" value="@Model.TaxDeductionPercentage" />
                    @*@Html.EditorFor(model => model.TaxDeductionPercentage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaxDeductionPercentage, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" id="btnEmployeeSalarySave" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>



    }



</div>

<script>
    $(document).ready(function () {
        //$("#EmployeeList").kendoDropDownList({});
        $("#SalaryType").kendoDropDownList({});
        $("#TaxRule").kendoDropDownList({});

        //format integer
        $(".txt-integer").kendoNumericTextBox({});
        //format currency
        $(".txt-currency").kendoNumericTextBox({
            format: "c",
            decimals: 3
        });
        //format persentage
        $(".txt-persentage").kendoNumericTextBox({
            format: "p0"
        });

        $("#btnEmployeeSalarySave").click(function () {
            //Save the salary
            ajaxFormSubmit(this, function (data) {
                console.log(data);
                toastr.success('Salary Save Success!', 'Notification');
                //$("#payrollStructure-2").load('@(Url.Action("Index", "PayslipAllowance", null, Request.Url.Scheme))');
            });



        });


    });
</script>