@model Florence.RecruitmentCandidate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "editCandidateForm" })) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LinkID)

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-3"></div>
        <div class="col-md-3"></div>
        <div class="col-md-3"></div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @(Html.Kendo().DropDownListFor(x => x)
                          .Name("Gender")
                          .DataTextField("Text")
                          .DataValueField("Value")
                          .BindTo(new List<SelectListItem>() {
              new SelectListItem() {
                  Text = "Male",
                  Value = "Male"
              },
              new SelectListItem() {
                  Text = "Female",
                  Value = "Female"
              }
                          })
                          .Value("")
                          .HtmlAttributes(new { style = "" }))
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @*@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })*@
                @(Html.Kendo().DatePickerFor(x => x.DOB)
              .Name("DOB")
              .Value(DateTime.Today)
              .HtmlAttributes(new { style = "" })
                )
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3"> 
            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.JobField, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.DropDownListFor(model => model.JobField, new SelectList(JobPost.GetAll(), "JobTitle", "JobTitle"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobField, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.HaveWorkingPermit, htmlAttributes: new { @class = "control-label" })
            <div class="">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HaveWorkingPermit)
                    @Html.ValidationMessageFor(model => model.HaveWorkingPermit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Interests, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Interests, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interests, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Achievements, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Achievements, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Achievements, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>


    <div class="form-horizontal">
        

        <div class="form-group">
            <div class = "control-label"></div>
            <div class="">
                <table id="workExpGrid"></table>
                <div id="pager_list_1"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddExp" type="button" value="Add Work Experience" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class="control-label"></div>
            <div class="">
                <table id="trainingGrid"></table>
                <div id="pager_list_2"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddTrain" type="button" value="Add Trainging" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class="control-label"></div>
            <div class="">
                <table id="educationGrid"></table>
                <div id="pager_list_3"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddEducation" type="button" value="Add Education" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class="control-label"></div>
            <div class="">
                <table id="languageGrid"></table>
                <div id="pager_list_4"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddLanguage" type="button" value="Add Language" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class="control-label"></div>
            <div class="">
                <table id="skillGrid"></table>
                <div id="pager_list_5"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddSkill" type="button" value="Add Skill" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class="control-label"></div>
            <div class="">
                <table id="referenceGrid"></table>
                <div id="pager_list_6"></div>
            </div>
            <div class=" col-md-10">
                <input id="btnAddReference" type="button" value="Add Reference" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            <div class=" col-md-10">
                <input type="button" id="btnRecruitmentCandidateCreate" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        genericInit();
    });
</script>

@Styles.Render("~/Content/plugins/jqGrid/jqGridStyles")
@Scripts.Render("~/plugins/jqGrid")

<script>
    

    $(document).ready(function () {
        $("#btnRecruitmentCandidateCreate").click(function (e) {
            saveRecruitmentData()
        });

        $("#btnAddExp").click(function (e) {
            createWindow(_addWorkExp, "Edit Work Experience", "RecruitmentCandidate", "EditWorkExpForm", "");
        });

        $("#btnAddTrain").click(function (e) {
            createWindow(_addTraining, "Edit Training", "RecruitmentCandidate", "EditTrainingForm", "");
        });

        $("#btnAddEducation").click(function (e) {
            createWindow(_addEducation, "Edit Education", "RecruitmentCandidate", "EditEducationForm", "");
        });

        $("#btnAddLanguage").click(function (e) {
            createWindow(_addLanguage, "Edit Language", "RecruitmentCandidate", "EditLanguageForm", "");
        });
        
        $("#btnAddSkill").click(function (e) {
            createWindow(_addSkill, "Edit Skill", "RecruitmentCandidate", "EditSkillForm", "");
        });

        $("#btnAddReference").click(function (e) {
            createWindow(_addReference, "Edit Reference", "RecruitmentCandidate", "EditReferenceForm", "");
        });

        
    });

</script>